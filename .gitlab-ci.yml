image: docker:19.03.12

variables:
  # When using dind service, you must instruct docker to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  
  # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
  # the variable must be set to tcp://localhost:2375 because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2375

  DOCKER_HOST: tcp://docker:2375

  # This instructs Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:19.03.12-dind

stages:
- test
- build
- deploy-dev
- deploy-prod

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml

docker_build_test:
  stage: test
  script:
    - docker build --network host -t $CI_REGISTRY_IMAGE/spawnerservice:$CI_COMMIT_SHORT_SHA -f Dockerfile .
  except:
    - main

docker_creation:
  stage: build
  script:
    - docker login --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD  $CI_REGISTRY
    - docker build --network host -t $CI_REGISTRY_IMAGE/spawnerservice:$CI_COMMIT_SHORT_SHA -f Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/spawnerservice:$CI_COMMIT_SHORT_SHA
  only:
    refs:
      - tags
      - main
      - branches

helm_deploy_dev_manual:
  image: 
    name: netbookai/gitlab:helm
    entrypoint: [""]
  stage: deploy-dev
  script:
  - kubectl config use-context $KUBE_CONTEXT
  - helm upgrade --install spawnerservice kubernetes/charts/spawnerservice -f kubernetes/charts/spawnerservice/deployments/dev/spawnerservice.yaml -n $NAMESPACE --set docker=$DOCKER_K8S_CONFIG,rancher.address=$RANCHER_ADDRESS,rancher.username=$RANCHER_USERNAME,rancher.password=$RANCHER_PASSWORD,rancher.aws_cred_name=$RANCHER_AWS_CRED_NAME,image.tag=$CI_COMMIT_SHORT_SHA,env=$ENV,secret_host_region=$SECRET_HOST_REGION,route53_hostedzone_id=$AWS_ROUTE53_HOSTEDZONEID_DEV,node_deletion_timeout_in_seconds=$NODE_DELETION_TIME_IN_SECONDS,azure_cloud_provider=$AZURE_CLOUD_PROVIDER

  environment:
    name: development
  only:
    refs:
      - branches
  when: manual

helm_deploy_dev_auto:
  image: 
    name: netbookai/gitlab:helm
    entrypoint: [""]
  stage: deploy-dev
  script:
  - kubectl config use-context $KUBE_CONTEXT
  - helm upgrade --install spawnerservice kubernetes/charts/spawnerservice -f kubernetes/charts/spawnerservice/deployments/dev/spawnerservice.yaml -n $NAMESPACE --set docker=$DOCKER_K8S_CONFIG,rancher.address=$RANCHER_ADDRESS,rancher.username=$RANCHER_USERNAME,rancher.password=$RANCHER_PASSWORD,rancher.aws_cred_name=$RANCHER_AWS_CRED_NAME,image.tag=$CI_COMMIT_SHORT_SHA,env=$ENV,secret_host_region=$SECRET_HOST_REGION,route53_hostedzone_id=$AWS_ROUTE53_HOSTEDZONEID_DEV,node_deletion_timeout_in_seconds=$NODE_DELETION_TIME_IN_SECONDS,azure_cloud_provider=$AZURE_CLOUD_PROVIDER,openid_role=$OPENID_ROLE

  environment:
    name: development
  only:
    refs:
    - tags
    - main
    
helm_deploy_prod:
  image: 
    name: netbookai/gitlab:helm
    entrypoint: [""]
  stage: deploy-prod
  script:
  - kubectl config use-context $KUBE_CONTEXT
  - helm upgrade --install spawnerservice kubernetes/charts/spawnerservice -f kubernetes/charts/spawnerservice/deployments/dev/spawnerservice.yaml -n $NAMESPACE --set docker=$DOCKER_K8S_CONFIG,rancher.address=$RANCHER_ADDRESS,rancher.username=$RANCHER_USERNAME,rancher.password=$RANCHER_PASSWORD,rancher.aws_cred_name=$RANCHER_AWS_CRED_NAME,image.tag=$CI_COMMIT_SHORT_SHA,env=$ENV,secret_host_region=$SECRET_HOST_REGION,route53_hostedzone_id=$AWS_ROUTE53_HOSTEDZONEID_DEV,node_deletion_timeout_in_seconds=$NODE_DELETION_TIME_IN_SECONDS,azure_cloud_provider=$AZURE_CLOUD_PROVIDER,openid_role=$OPENID_ROLE
  
  environment:
    name: production
  only:
    - tags
  when: manual

helm_deploy_prod_test:
  image: 
    name: netbookai/gitlab:helm
    entrypoint: [""]
  stage: deploy-prod
  script:
  - kubectl config use-context $KUBE_CONTEXT
  - helm template spawnerservice kubernetes/charts/spawnerservice -f kubernetes/charts/spawnerservice/deployments/dev/spawnerservice.yaml -n $NAMESPACE --set docker=$DOCKER_K8S_CONFIG,rancher.address=$RANCHER_ADDRESS,rancher.username=$RANCHER_USERNAME,rancher.password=$RANCHER_PASSWORD,rancher.aws_cred_name=$RANCHER_AWS_CRED_NAME,image.tag=$CI_COMMIT_SHORT_SHA,env=$ENV,secret_host_region=$SECRET_HOST_REGION,route53_hostedzone_id=$AWS_ROUTE53_HOSTEDZONEID_DEV,node_deletion_timeout_in_seconds=$NODE_DELETION_TIME_IN_SECONDS,azure_cloud_provider=$AZURE_CLOUD_PROVIDER,openid_role=$OPENID_ROLE
  
  environment:
    name: production
  only:
    - tags
  when: manual
